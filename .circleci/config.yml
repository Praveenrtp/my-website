version: 2.1
jobs:
  build:  
    docker:
      - image: circleci/node:16.4.1
    working_directory: ~/repo
    steps:
        - checkout
        - run:
            name: Show Current Branch
            command: echo ${CIRCLE_BRANCH}
        - restore_cache: 
            keys:
              - app-{{ checksum "package.json"}}
              - app-
        - run:
            name: Install dependencies
            command: npm install
        - save_cache:
            paths:
              - node-modules
            key: app-{{ checksum "package.json"}}
  deploy-to-aws-s3:
    docker:
      - image: cimg/node:14.17.3
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show Current Branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get update
            sudo apt-get install python3-pip python3-dev
            sudo pip install awscli
      - run:
          name: Build Project
          command: |
           npm install
           npm run build
           cd build
           zip ../built.zip -r * .[^.]*
           echo "Build Succesful"
      - run:
          name: Deploy to AWS s3
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif [ "${CIRCLE_BRANCH}" = "develop" ]; then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete
            else 
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            fi
          
  deploy-to-aws-cloudFront:
    docker:
      - image: cimg/node:16.4.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build Project
          command: |
            npm install
            npm run build
            cd build
            zip ../built.zip -r * .[^.]*
            echo "Build Succesful"
      - run:
          name: Deploy to AWS CloudFront
          command: |
            aws configure set preview.cloudfront
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
             aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\* 
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
             aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\* 
            else 
            then
             aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\* 
            fi
         
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires: 
            - build
          filters: 
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudFront:
          requires: 
            - deploy-to-aws-s3
          filters: 
            branches:
              only:
                - develop
                - staging
                - master

     
