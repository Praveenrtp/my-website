version: 2.1
executors:
  app-executor:
    docker:
      - image: circleci/node:16.4.1
    working_directory: ~/repo
aliases:
  - &show-current-branch-name
    run:
      name: Show Current Branch
      command: echo ${CIRCLE_BRANCH}
  - &restore_cache
    restore_cache: 
      keys:
        - app-{{ checksum "package.json"}}
        - app-
  - &install_dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save_cache
    save_cache:
      paths:
        - node-modules
      key: app-{{ checksum "package.json"}}
  - &Install_aws_cli
    run:
      name: Installing AWS CLI
      working_directory: /
      command: |
        sudo apt-get update
        sudo apt-get install python3-pip python3-dev
        sudo pip install 
  - &Build_Project
    run:
      name: Build Project
      command: |
        npm install
        npm run build
        cd build
        zip ../built.zip -r * .[^.]*
        echo "Build Succesful"

jobs:
  build:  
    executor: app-executor
    steps:
        - checkout
        - *show-current-branch-name
        - *restore_cache 
        - *install_dependencies
        - *save_cache
  linting:  
    executor: app-executor
    steps:
        - checkout
        - *show-current-branch-name
        - *restore_cache
        - run: 
            name: Run linting
            command: yarn run lint

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *Install_aws_cli
      - *Build_Project
      - run:
          name: Deploy to AWS s3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif [ "${CIRCLE_BRANCH}" = "develop" ];
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete
            else 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            fi
          
  deploy-to-aws-cloudFront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *Install_aws_cli
      - *Build_Project
      - run:
          name: activate cloud front
          command: |
            aws configure set preview.cloudfront true
            aws configure set preview.create-invalidation true

      - run:
          name: Deploy to AWS CloudFront
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
             aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\* 
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
             aws cloudfront create-invalidation --distribution-id  ${STAGING_DISTRIBUTION_ID} --paths /\* 
            else 
             aws cloudfront create-invalidation --distribution-id  ${DEV_DISTRIBUTION_ID} --paths /\* 
            fi
         
workflows:
  build_and_deploy:
    jobs:
      - build
      - linting:
          requires: 
            - build
          filters: 
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-s3:
          requires: 
            - build
          filters: 
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudFront:
          requires: 
            - deploy-to-aws-s3
          filters: 
            branches:
              only:
                - develop
                - staging
                - master

     
